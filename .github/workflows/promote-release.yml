name: Validate PR → Release

on:
  pull_request:
    branches:
      - release

permissions:
  contents: write
  pull-requests: write

jobs:
  validate-tests:
    name: Run Specified Apex Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.SF_DEV_AUTH_URL }}" > auth.txt
          sf org login sfdx-url --sfdx-url-file auth.txt --set-default --alias ciOrg
          sf org display user --target-org ciOrg

      - name: Run only specified test classes
        id: run-tests
        run: |
          TEST_CLASSES=$(cat .github/tests/test-classes.txt | xargs | tr ' ' ',')
          echo "Running tests: $TEST_CLASSES"
          sf apex run test --target-org ciOrg --tests "$TEST_CLASSES" --wait 10 --result-format human --code-coverage --verbose

      - name: Check if tests passed
        if: ${{ failure() }}
        run: |
          echo "❌ Tests failed. Merge to main is blocked."
          exit 1

  promote-release:
    name: Merge Release → Main (if tests pass)
    needs: validate-tests
    runs-on: ubuntu-latest
    if: ${{ success() }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch branches
        run: |
          git fetch origin main
          git fetch origin release

      - name: Checkout main branch
        run: git checkout main

      - name: Merge release into main
        run: git merge origin/release --no-edit

      - name: Push changes to main
        run: git push origin main