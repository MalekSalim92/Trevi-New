name: Promote Release to Main

on:
  push:
    branches:
      - release

permissions:
  contents: write

jobs:
  promote-to-main:
    name: Merge Release ‚Üí Main
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if last commit has passing tests
        uses: actions/github-script@v7
        with:
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
            });
            
            const testCheck = checks.check_runs.find(check => 
              check.name === 'Run Specified Apex Tests'
            );
            
            if (!testCheck) {
              core.setFailed('No test validation found for this commit');
              return;
            }
            
            if (testCheck.conclusion !== 'success') {
              core.setFailed(`Tests did not pass. Status: ${testCheck.conclusion}`);
              return;
            }
            
            console.log('‚úÖ Tests passed for this commit, proceeding with promotion');

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch branches
        run: |
          git fetch origin main
          git fetch origin release

      - name: Checkout main branch
        run: git checkout main

      - name: Merge release into main
        run: |
          git merge origin/release --no-edit
          echo "‚úÖ Merged release into main"

      - name: Push changes to main
        run: |
          git push origin main
          echo "‚úÖ Pushed changes to main"

      - name: Create Release Tag
        run: |
          VERSION="v$(date +'%Y.%m.%d')-${{ github.run_number }}"
          git tag -a "$VERSION" -m "Release $VERSION"
          git push origin "$VERSION"
          echo "üì¶ Created release tag: $VERSION"

      - name: Notify Success
        if: success()
        run: echo "‚úÖ Successfully promoted release to main"

      - name: Notify Failure
        if: failure()
        run: |
          echo "‚ùå Failed to promote release to main"
          exit 1
