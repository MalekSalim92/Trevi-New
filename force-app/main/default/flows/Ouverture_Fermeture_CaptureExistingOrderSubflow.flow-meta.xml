<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_Error_msg</name>
        <label>Assign Error msg</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>ErrorMsg</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assing_Exist_var</name>
        <label>Assing Exist var</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>orderExists</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>orderExists_Formula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>existing_order_service</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>existing_order_service_formula</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <collectionProcessors>
        <name>Closing_Products_Filter</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Closing Products Filter</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNextValueToReference>currentItem_Closing_Products_Filter</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_Order_Products</collectionReference>
        <conditionLogic>formula_evaluates_to_true</conditionLogic>
        <connector>
            <targetReference>Closing_Products_Count</targetReference>
        </connector>
        <formula>OR(
TEXT({!currentItem_Closing_Products_Filter.Product2.Opening_Closing__c}) = &apos;Closing&apos;,
TEXT({!currentItem_Closing_Products_Filter.Product2.Opening_Closing__c}) = &apos;Opening Closing&apos;
)</formula>
    </collectionProcessors>
    <collectionProcessors>
        <name>Opening_Products_Filter</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Opening Products Filter</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNextValueToReference>currentItem_Opening_Products_Filter</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_Order_Products</collectionReference>
        <conditionLogic>formula_evaluates_to_true</conditionLogic>
        <connector>
            <targetReference>Opening_Products_Count</targetReference>
        </connector>
        <formula>OR(
TEXT({!currentItem_Opening_Products_Filter.Product2.Opening_Closing__c}) = &apos;Opening&apos;,
TEXT({!currentItem_Opening_Products_Filter.Product2.Opening_Closing__c}) = &apos;Opening Closing&apos;
)</formula>
    </collectionProcessors>
    <environments>Default</environments>
    <formulas>
        <name>existing_order_service_formula</name>
        <dataType>String</dataType>
        <expression>IF(
   OR({!Opening_Products_Count} &gt; 0 , {!Closing_Products_Count} &gt; 0 ),
   IF(
      AND({!Opening_Products_Count} &gt; 0 , {!Closing_Products_Count} &gt; 0),
      &quot;opening_closing_exist&quot;,
      IF(
         {!Opening_Products_Count} &gt; 0,
         &quot;opening_exist&quot;,
         IF(
             {!Closing_Products_Count} &gt; 0,
            &quot;closing_exist&quot;,
            &quot;&quot;
         )
      )
   ),
   &quot;&quot;
)</expression>
    </formulas>
    <formulas>
        <name>Next_Year</name>
        <dataType>Date</dataType>
        <expression>ADDMONTHS(TODAY(),12)</expression>
    </formulas>
    <formulas>
        <name>orderExists_Formula</name>
        <dataType>Boolean</dataType>
        <expression>IF(
{!serviceType} = &apos;Opening&apos;,
{!Opening_Products_Count} &gt; 0 ,
IF(
{!serviceType} = &apos;Closing&apos;,
{!Closing_Products_Count} &gt; 0 ,
OR({!Opening_Products_Count} &gt; 0 , {!Closing_Products_Count} &gt; 0 )
)
)</expression>
    </formulas>
    <interviewLabel>Ouverture Fermeture CaptureExistingOrderSubflow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Ouverture Fermeture CaptureExistingOrderSubflow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Existing_Orders</name>
        <label>Get Existing Orders</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>orderIds</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_Error_msg</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>orderRecordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>accountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>TECH_AssetId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>assetId</elementReference>
            </value>
        </filters>
        <filters>
            <field>TECH_AssetId__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Order</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Order_Products</name>
        <label>Get Order Products</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Closing_Products_Filter</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Assign_Error_msg</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderId</field>
            <operator>In</operator>
            <value>
                <elementReference>orderIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>Service_Date__c</field>
            <operator>LessThan</operator>
            <value>
                <elementReference>Next_Year</elementReference>
            </value>
        </filters>
        <filters>
            <field>Service_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OrderItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Existing_Orders</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <transforms>
        <name>Closing_Products_Count</name>
        <label>Closing Products Count</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Opening_Products_Filter</targetReference>
        </connector>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <scale>0</scale>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <transformValues>
            <transformValueActions>
                <inputParameters>
                    <name>aggregationValues</name>
                    <value>
                        <elementReference>Closing_Products_Filter</elementReference>
                    </value>
                </inputParameters>
                <transformType>Count</transformType>
            </transformValueActions>
        </transformValues>
    </transforms>
    <transforms>
        <name>Opening_Products_Count</name>
        <label>Opening Products Count</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Assing_Exist_var</targetReference>
        </connector>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <scale>0</scale>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <transformValues>
            <transformValueActions>
                <inputParameters>
                    <name>aggregationValues</name>
                    <value>
                        <elementReference>Opening_Products_Filter</elementReference>
                    </value>
                </inputParameters>
                <transformType>Count</transformType>
            </transformValueActions>
        </transformValues>
    </transforms>
    <transforms>
        <name>orderIds</name>
        <label>orderIds</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Order_Products</targetReference>
        </connector>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <scale>0</scale>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <transformValues>
            <transformValueActions>
                <transformType>Map</transformType>
                <value>
                    <elementReference>Get_Existing_Orders[$EachItem].Id</elementReference>
                </value>
            </transformValueActions>
        </transformValues>
    </transforms>
    <variables>
        <name>accountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>assetId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>currentItem_Closing_Products_Filter</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OrderItem</objectType>
    </variables>
    <variables>
        <name>currentItem_Opening_Products_Filter</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OrderItem</objectType>
    </variables>
    <variables>
        <name>ErrorMsg</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>existing_order_service</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>orderExists</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>orderRecordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>serviceType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
