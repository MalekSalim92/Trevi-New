<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_Adjusted_Clauses</name>
        <label>Assign Adjusted Clauses</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>finalBaseClauses</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>baseClausesAdjusted</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>finalExtraClauses</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>extraClausesAdjusted</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>finalProductSummaryClauses</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>productSummaryClauseAdjusted</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Base_Clauses</name>
        <label>Assign Base Clauses</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>baseClauses</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>baseProductsClauses</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>duplicateClausesCollectionChecker</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Through_Base_Products.Product2.Contract_Clause_FR__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_Base_Products</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Extra_Clauses</name>
        <label>Assign Extra Clauses</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>extraClauses</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>extraProductsClauses</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>duplicateClausesCollectionChecker</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Through_Extra_Products.Product2.Contract_Clause_FR__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_product_summary_clause</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Product_Summary_Clauses</name>
        <label>Assign Product Summary Clauses</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>productSummaryProduct</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>extraProductsClauses</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Through_Extra_Products</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Clause_already_In_Extras</name>
        <label>Skip Clause</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Assign_Extra_Clauses</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesClauseInExtra</name>
            <conditionLogic>1 OR 2 OR ( 3 AND 4 )</conditionLogic>
            <conditions>
                <leftValueReference>duplicateClausesCollectionChecker</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>Loop_Through_Extra_Products.Product2.Contract_Clause_FR__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Through_Extra_Products.Product2.Has_clause__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Through_Extra_Products.Product2.Contract_Clause_EN__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Through_Extra_Products.Product2.Contract_Clause_FR__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Through_Extra_Products</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_product_summary_clause</name>
        <label>Is product summary clause ?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Loop_Through_Extra_Products</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>yesProductSum</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Through_Extra_Products.Product2.Is_product_summary_clause__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Product_Summary_Clauses</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Skip_Clause</name>
        <label>Skip Clause</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Assign_Base_Clauses</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesClauseIn</name>
            <conditionLogic>1 OR 2 OR ( 3 AND 4 )</conditionLogic>
            <conditions>
                <leftValueReference>duplicateClausesCollectionChecker</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>Loop_Through_Base_Products.Product2.Contract_Clause_FR__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Through_Base_Products.Product2.Has_clause__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Through_Base_Products.Product2.Contract_Clause_EN__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Through_Base_Products.Product2.Contract_Clause_FR__c</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Through_Base_Products</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>baseClausePlainText</name>
        <dataType>String</dataType>
        <expression>IF({!siteLanguage} = &apos;fr&apos; ,{!Loop_Through_Base_Products.Product2.Contract_Clause_FR__c},{!Loop_Through_Base_Products.Product2.Contract_Clause_EN__c})</expression>
    </formulas>
    <formulas>
        <name>baseClausesAdjusted</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE(SUBSTITUTE({!baseClauses}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;), &apos;,&apos;, &apos; &apos;)</expression>
    </formulas>
    <formulas>
        <name>extraClausePlainText</name>
        <dataType>String</dataType>
        <expression>IF({!siteLanguage} = &apos;fr&apos; ,{!Loop_Through_Extra_Products.Product2.Contract_Clause_FR__c},{!Loop_Through_Extra_Products.Product2.Contract_Clause_EN__c})</expression>
    </formulas>
    <formulas>
        <name>extraClausesAdjusted</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE(SUBSTITUTE({!extraClauses}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;), &apos;,&apos;, &apos; &apos;)</expression>
    </formulas>
    <formulas>
        <name>productSummaryClauseAdjusted</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(SUBSTITUTE(SUBSTITUTE({!productSummaryProduct}, &apos;[&apos;, &apos;&apos;), &apos;]&apos;, &apos;&apos;), &apos;,&apos;, &apos; &apos;)</expression>
    </formulas>
    <interviewLabel>Ouverture Fermeture ClausesSubflow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Ouverture Fermeture ClausesSubflow</label>
    <loops>
        <name>Loop_Through_Base_Products</name>
        <label>Loop Through Base Products</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>basePricebookEntries</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Skip_Clause</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Loop_Through_Extra_Products</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_Through_Extra_Products</name>
        <label>Loop Through Extra Products</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>PrepareOrderItemsList</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Clause_already_In_Extras</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assign_Adjusted_Clauses</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Loop_Through_Base_Products</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <textTemplates>
        <name>baseProductsClauses</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;ul&gt;&lt;li&gt;{!baseClausePlainText}&lt;/li&gt;&lt;/ul&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>extraProductsClauses</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;ul&gt;&lt;li&gt;{!extraClausePlainText}&lt;/li&gt;&lt;/ul&gt;</text>
    </textTemplates>
    <variables>
        <name>baseClauses</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>basePricebookEntries</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>PricebookEntry</objectType>
    </variables>
    <variables>
        <name>baseProducts</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>OrderItem</objectType>
    </variables>
    <variables>
        <name>duplicateClausesCollectionChecker</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>extraClauses</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>finalBaseClauses</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>finalExtraClauses</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>finalProductSummaryClauses</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>PrepareOrderItemsList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>OrderItem</objectType>
    </variables>
    <variables>
        <name>productSummaryProduct</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>siteLanguage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
